# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
    name: Default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  AzureSubscription: 'a5a67ecd-d13c-4ae6-a649-31193d342fdb'
  AppType: 'functionApp'
  AppName: 'MyFuncApp'
  ArtifactFileName: 'MyArtifact.zip'  # Hardcoded artifact name
steps:
- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    projects: '**/*.csproj'
    arguments: '--output publish_output --configuration Release'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: 'publish_output/'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: MyArtifact'  # Hardcoded artifact name
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  displayName: 'Download artifact'
  inputs:
     artifactName: 'drop'
     downloadPath: '$(System.DefaultWorkingDirectory)/DownloadedArtifact'
     targetPath: '$(System.DefaultWorkingDirectory)/DownloadedArtifact'
     
# - powershell: |
#     $artifactName = Get-ChildItem -Path "$(System.DefaultWorkingDirectory)/DownloadedArtifact" -Filter "*.zip" | Select-Object -First 1 -ExpandProperty Name
#     Write-Host "Downloaded Artifact Name: $artifactName"
#     displayName: 'Check Downloaded Artifact Name'

# - powershell: |
#     $artifactName = Get-ChildItem -Path "$(System.DefaultWorkingDirectory)/DownloadedArtifact" -Filter "*.zip" | Select-Object -First 1 -ExpandProperty Name
#     Write-Output "Downloaded Artifact Name: $artifactName"
#   displayName: 'Check Downloaded Artifact Name'

- powershell: |
    $artifactPath = Get-ChildItem -Path "$(System.DefaultWorkingDirectory)/DownloadedArtifact/drop" -Filter "*.zip" | Select-Object -First 1 -ExpandProperty FullName
    Write-Output "Downloaded Artifact Path: $artifactPath"
    Write-Output "##vso[task.setvariable variable=DownloadedArtifactPath;]$artifactPath"
    echo $artifactPath
  displayName: 'Set Downloaded Artifact Path'

# - task: AzureFunctionApp@1
#   displayName: 'Deploy Azure Function App'
#   inputs:
#     azureSubscription: 'FunctionAppSvc'  # Update with your correct service connection ID
#     appType: 'functionApp'
#     appName: 'MyIdeaFncApp'
#     package: '$(System.DefaultWorkingDirectory)/DownloadedArtifact/$(ArtifactFileName)'